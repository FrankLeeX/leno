in main:


int main(int argc, char** argv)
{
    GetPot  commandLine(argc, argv);
    std::string ifile ;
    
    if( commandLine.search(2, "--input", "-i") )
      	ifile = commandLine.next("");
    else
    {
        cout << "Error in usage! Run as kappa -i filename." << endl ;
        exit(0);
    }
    
    Param param ;  
    param.readParamFile(ifile);  
    param.printInfo();





void Param::readParamFile(std::string filename) 
{
    //Open GetPot parameter file. Specify that comments are C-style. 
    GetPot ifile(filename.c_str(),"/*","*/") ; 
    
    //1. Parsing section [Material]
    ifile.set_prefix("Material/");
    materialName = ifile("materialName","") ;
    materialType = ifile("materialType","") ;

    ifile.set_prefix("RealBands/") ;
    iPath       = ifile("iPath", 0);
    nSamples    = ifile("nSamples", 25);
    nCB         = ifile("nCB", 10);
    nVB         = ifile("nVB", 10);    
    midGap      = ifile("midGap", 0.5) ;
        
    kBegin.push_back(ifile("kBegin", 0.0, 0)) ;
    kBegin.push_back(ifile("kBegin", 0.0, 1)) ;
    kBegin.push_back(ifile("kBegin", 0.0, 2)) ;
    



input deck

[Material]
    materialName = Ge
    materialType = Ordered 

    anionSpecies    = Ge 
    cationSpecies   = Ge 

    paramSet        = Boykin        /* Boykin , Niquet */

    e = 0.0
    
    isSpin  =  1
    isStrain = 0 
    isHydrogenTermination = 0 

[Analysis]
    analysisType = 0    /*  0 => RealBands 
                         *  1 => ComplexBands 
                         */
                         
[RealBands]
    iPath = 0           /*  0 => L Gamma X U,K Gamma : "Boykin" path
						 *  1 => X W L Gamma X U,K Gamma : "Fischetti" path
						 *  2 => L Gamma X W K L W X U,K Gamma : "Jancu et al." path
						 *  Above options valid only for bulk.	
						 *  3 => custom path from kBegin to kEnd, in steps of kStep. 
					     */
    
    nCB  = 3            /* Number of conduction bands */
    nVB  = 3            /* Number of valence bands */
    midGap = 0.3        /* Approximate Midgap energy, to help distinguish between conduction and
                           valence bands */
       
    nSamples = 25       /* Number of points along each section of kPath */
    
    kBegin = '0 0 0'
    kEnd   = '0 0 0'
    

to run:
LEGO -i input.pot

